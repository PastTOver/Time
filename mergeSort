def merge_sort(arr):
    if len(arr) <= 1:
        return arr
    
    # Split the list in half
    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]
    
    # Recursively sort both halves
    left_half = merge_sort(left_half)
    right_half = merge_sort(right_half)
    
    # Merge the sorted halves
    merged_array = []
    i = 0
    j = 0
    
    while i < len(left_half) and j < len(right_half):
        if left_half[i] < right_half[j]:
            merged_array.append(left_half[i])
            i += 1
        else:
            merged_array.append(right_half[j])
            j += 1
    
    # Append any remaining elements
    while i < len(left_half):
        merged_array.append(left_half[i])
        i += 1
    
    while j < len(right_half):
        merged_array.append(right_half[j])
        j += 1
    
    return merged_array

# Test the merge_sort function
test_array = [38, 27, 43, 3, 9, 82, 10]
sorted_array = merge_sort(test_array)
sorted_array
